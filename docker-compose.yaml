version: "3.5"
services:
  #  simplechat:
  #    image: euhenios/simplechat:latest
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    container_name: simplechat
  #    depends_on:
  #      - postgres
  #      - broker
  #      - mongo
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      SPRING_DATASOURCE_URL: "jdbc:postgresql://chatdb:5432/store_management"
  #      SPRING_KAFKA_BOOTSTRAP_SERVERS: "broker:29092"
  #      SPRING_DATA_MONGODB_HOST: "mongo"
  #      MONGO_DB: "chat_mongo"
  #      MONGO_USER: "admin"
  postgres:
    image: postgres:14.3-alpine
    container_name: store_management
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "store_management"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password"
      PG_DATA: ./snap/postgres/data/pgdata
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:6.2.0
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#  #    networks:
#  #      - broker
#  broker:
#    image: confluentinc/cp-kafka:7.0.0
#    container_name: broker
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#
#  mongo:
#    image: mongo:6.0.3
#    ports:
#      - "27017:27017"
